{"version":3,"sources":["../../src/adapters/adapter.js"],"names":["Adapter","socket","subscribe","m","emit","channel","data","final","Promise","resolve","isDisconnected","host","gameid","info","pin","publish","Emitter"],"mappings":"wrBASqBA,O,aAOnB,WAAYC,CAAZ,CAAoB,sJAGlB,EAAKA,MAAL,CAAcA,CAHI,CAIlB,EAAKA,MAAL,CAAYC,SAAZ,CAAsB,qBAAtB,CAA6C,SAACC,CAAD,QAAO,GAAKC,IAAL,CAAU,YAAV,CAAwBD,CAAxB,CAAP,CAA7C,CAJkB,CAKlB,EAAKF,MAAL,CAAYC,SAAZ,CAAsB,iBAAtB,CAAyC,SAACC,CAAD,QAAO,GAAKC,IAAL,CAAU,QAAV,CAAoBD,CAApB,CAAP,CAAzC,CALkB,CAMlB,EAAKF,MAAL,CAAYC,SAAZ,CAAsB,iBAAtB,CAAyC,SAACC,CAAD,QAAO,GAAKC,IAAL,CAAU,QAAV,CAAoBD,CAApB,CAAP,CAAzC,CANkB,EAOnB,C,qGAUIE,C,CAAoB,YAAXC,CAAW,wDAAJ,EAAI,CACjBC,CAAK,CAAGD,CADS,CAEvB,MAAO,IAAIE,CAAAA,OAAJ,CAAY,SAACC,CAAD,CAAa,CACzB,CAAI,CAACR,MAAL,CAAYS,cAAZ,EADyB,CAM5BD,CAAO,EANqB,EAE5BF,CAAK,CAACI,IAAN,CAAa,WAFe,CAG5BJ,CAAK,CAACK,MAAN,CAAe,CAAI,CAACX,MAAL,CAAYY,IAAZ,CAAiBC,GAHJ,CAI5B,CAAI,CAACb,MAAL,CAAYc,OAAZ,CAAoBV,CAApB,CAA6BE,CAA7B,CAAoCE,CAApC,CAJ4B,CAQ/B,CARM,CASR,C,OAnCkCO,uB","sourcesContent":["import Emitter from 'tiny-emitter';\n\n/**\n * Class used as a base for all adapters\n *\n * @export\n * @class Adapter\n * @extends {Emitter}\n */\nexport default class Adapter extends Emitter {\n  /**\n   * Creates an instance of Adapter.\n   *\n   * @param {CometD} socket\n   * @memberof Adapter\n   */\n  constructor(socket) {\n    super();\n\n    this.socket = socket;\n    this.socket.subscribe('/service/controller', (m) => this.emit('controller', m));\n    this.socket.subscribe('/service/player', (m) => this.emit('player', m));\n    this.socket.subscribe('/service/status', (m) => this.emit('status', m));\n  }\n\n  /**\n   * Send data over the socket\n   *\n   * @param {String} channel - CometD channel\n   * @param {Object} [data={}]\n   * @returns {Promise}\n   * @memberof Adapter\n   */\n  send(channel, data = {}) {\n    const final = data;\n    return new Promise((resolve) => {\n      if (!this.socket.isDisconnected()) {\n        final.host = 'kahoot.it';\n        final.gameid = this.socket.info.pin;\n        this.socket.publish(channel, final, resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n}\n"],"file":"adapter.js"}